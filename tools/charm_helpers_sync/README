Script for synchronizing charm-helpers into a charm branch.

Losely based on oslo-incubator:
    https://github.com/openstack/oslo-incubator.git

Allows specifying a list of dependencies to sync in from a charm-helpers
branch.  Ideally, each charm should describe its requirements in a yaml
config included in the charm, eg charm-helpers.yaml (NOTE: Example module
layout as of 05/30/2013):

    $ cd my-charm
    $ cat >charm-helpers.yaml <<END
    destination: hooks/helpers
    branch: lp:charm-helpers
    include:
        - core
        - contrib.openstack
        - contrib.hahelpers:
            - ceph_utils
    END

includes may be defined as entire module sub-directories, or as invidual
.py files with in a module sub-directory.

Charm author can then sync in and update helpers as needed.  The following
import all of charmhelpers.core + charmhelpers.contrib.openstack, and only
ceph_utils.py from charmhelpers.contrib.hahelpers:

    $ charm-helper-sync -c charm-helpers.yaml
    $ find hooks/helpers/
    hooks/helpers/
    hooks/helpers/contrib
    hooks/helpers/contrib/openstack
    hooks/helpers/contrib/openstack/openstack_utils.py
    hooks/helpers/contrib/openstack/__init__.py
    hooks/helpers/contrib/hahelpers
    hooks/helpers/contrib/hahelpers/ceph_utils.py
    hooks/helpers/contrib/hahelpers/__init__.py
    hooks/helpers/contrib/__init__.py
    hooks/helpers/core
    hooks/helpers/core/hookenv.py
    hooks/helpers/core/host.py
    hooks/helpers/core/__init__.py
    hooks/helpers/__init__.py


Script will create missing __init__.py's to ensure each subdirectory is
importable, assuming the script is run from the charm's top-level directory.

You may also override configured destination directory and source bzr
branch:

    $ charm-helper-sync -b ~/src/bzr/charm-helpers-dev \
            -d hooks/helpers-test \
            -c charm-helpers.yaml

Or not use a config file at all:
    $ charm-helper-sync -b lp:~gandelman-a/charm-helpers/fixes \
            -d hooks/helpers core contrib.openstack contrib.hahelpers

Script will create missing __init__.py's to ensure each subdirectory is
importable, assuming the script is run from the charm's top-level directory.
